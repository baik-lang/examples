isi Math = {
    floor: ffi('double floor(double)')
};

isi items = [5,3,7,6,2,9];

tulis("sebelum diurutkan : ");
untuk (isi i=0; i < items.panjang; i++){
    tulis(items[i]);
}

fungsi swap(items, leftIndex, rightIndex){
    isi temp = items[leftIndex];
    items[leftIndex] = items[rightIndex];
    items[rightIndex] = temp;
}

fungsi partition(items, left, right) {
    isi pivot   = items[Math.floor((right + left) / 2)],
        i       = left, 
        j       = right; 
    ulang (i <= j) {
        ulang (items[i] < pivot) {
            i++;
        }
        ulang (items[j] > pivot) {
            j--;
        }
        jika (i <= j) {
            swap(items, i, j); //sawpping two elements
            i++;
            j--;
        }
    }
    balik i;
}

fungsi quickSort(items, left, right) {
    isi index;
    jika (items.panjang > 1) {
        index = partition(items, left, right); //index baliked from partition
        jika (left < index - 1) { //more elements on the left side of the pivot
            quickSort(items, left, index - 1);
        }
        jika (index < right) { //more elements on the right side of the pivot
            quickSort(items, index, right);
        }
    }
    balik items;
}

isi sortedArray = quickSort(items, 0, items.panjang - 1);

tulis("setelah diurutkan : ");
untuk (isi i=0; i < sortedArray.panjang; i++){
    tulis(sortedArray[i]);
}